#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
ynh_print_OFF
password=$YNH_APP_ARG_PASSWORD
ynh_print_ON
is_public=$YNH_APP_ARG_IS_PUBLIC
final_path=/var/www/$app

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=is_public --value=$is_public

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=15

ynh_install_app_dependencies $pkg_dependencies

#install locale (nginx will restart at the end of the install)
for i in $lang ; do
 ynh_replace_string "# $i" "$i" /etc/locale.gen
done

locale-gen

#=================================================
# INSTALL SOURCES
#===============================================
ynh_script_progression --message="Setting up source files..." --weight=5

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

cp ../conf/index_source.php $final_path/www/index.php
ynh_replace_string --match_string="Template-exemple" --replace_string="$domain" --target_file="$final_path/www/index.php"

#Temporaire - mettre en config
ln -s $final_path/lang/fr $final_path/lang/fr_FR
ln -s $final_path/lang/it $final_path/lang/it_IT
ln -s $final_path/www/template-exemple $final_path/template-exemple

#===============================================
#SETTINGS & DATABASE
#===============================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# MODIFY A CONFIG FILE
#=================================================

#configuring with given settings
cp ../conf/conf-dist.php $final_path/conf.php

#Update various conf : domain, database, user and password
ynh_replace_string --match_string="__DOMAIN__" --replace_string="$domain" --target_file="$final_path/conf.php"
ynh_replace_string --match_string="__DB_NAME__" --replace_string="$db_name" --target_file="$final_path/conf.php"
ynh_replace_string --match_string="__DB_PWD__" --replace_string="$db_pwd" --target_file="$final_path/conf.php"
ynh_replace_string --match_string="__PASSWORD__" --replace_string="$password" --target_file="$final_path/conf.php"

#setting conf file not world-readable (dude, there is a plain-text password !)
chmod o-r $final_path/conf.php

#setting postfix to use virtual aliases file
# Add postfix configuration hook and regen postfix conf
cp -R ../sources/hooks/conf_regen/98-postfix_emailpoubelle /usr/share/yunohost/hooks/conf_regen/
yunohost tools regen-conf postfix

#create the virtual aliases file 
touch $final_path/var/virtual
postmap $final_path/var/virtual
chown -R www-data: $final_path

#create an alias for deleted junk adresses
cp /etc/aliases /etc/aliases.emailpoubelle.bak #backup it 
echo "devnull:/dev/null" | tee -a /etc/aliases
newaliases

#=================================================
# ADD CRON
#=================================================

cp -a ../conf/emailpoubelle.cron /etc/cron.d/$app
chown root: /etc/cron.d/$app
chmod 644 /etc/cron.d/$app

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

ynh_add_nginx_config

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

ynh_systemd_action --service_name=postfix --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
